name: Build and Release NFTOOL

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          if (Test-Path requirements.txt) {
            pip install -r requirements.txt
          } else {
            pip install pywin32 requests packaging
          }
          pip install pyinstaller

      - name: Build EXE (PyInstaller)
        shell: pwsh
        run: |
          pyinstaller --onefile --windowed --name NFTOOL --icon=Ficon_multi.ico `
            --add-data "Ficon_multi.ico;." `
            --add-data "play_darkmode_smooth.png;." `
            --add-data "pause_darkmode_smooth.png;." NFTOOL.py
          if (-not (Test-Path dist/NFTOOL.exe)) { throw "Build failed: dist/NFTOOL.exe not found." }

      - name: Create ZIP package
        shell: pwsh
        run: |
          $tag = "${{ github.ref_name }}"           # z.B. v1.0.0
          $zipName = "NFTOOL_$tag.zip"
          # Paket-Ordner
          New-Item -ItemType Directory package -Force | Out-Null
          Copy-Item dist/NFTOOL.exe package/
          # (optional) kurze Readme beilegen
          @"
NFTOOL $tag

Usage:
- Entpacken
- NFTOOL.exe starten
"@ | Out-File -FilePath package/README.txt -Encoding UTF8
          # ZIP erstellen
          Compress-Archive -Path package/* -DestinationPath $zipName -Force
          if (-not (Test-Path $zipName)) { throw "ZIP build failed." }
          Write-Host "Created $zipName"

      - name: Upload to GitHub Release (EXE + ZIP)
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/NFTOOL.exe
            NFTOOL_${{ github.ref_name }}.zip
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
